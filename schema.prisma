datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int          @id @default(autoincrement())
  created_at DateTime     @default(now())
  username   String       @unique
  password   String
  rooms      UserRoom[]   @relation("UserRooms")
  messages   Message[]    @relation("UserMessages")
  createdRooms Room[]     @relation("RoomCreator")

  @@map("users")
}

model Room {
  id         Int          @id @default(autoincrement())
  created_at DateTime     @default(now())
  name       String
  creatorId  Int
  creator    User         @relation(fields: [creatorId], references: [id], name: "RoomCreator")
  users      UserRoom[]   @relation("RoomUsers")
  messages   Message[]    @relation("RoomMessages")
  url        String?
  deleted    Boolean?     

  @@map("rooms")
}

model Message {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  content    String?
  senderId   Int
  roomId     Int
  sender     User     @relation(fields: [senderId], references: [id], name: "UserMessages")
  room       Room     @relation(fields: [roomId], references: [id], name: "RoomMessages")
  fileUrl    String?  
  fileType   String?  
  type       String?
  @@map("messages")
}

model UserRoom {
  id         Int      @id @default(autoincrement())
  userId     Int
  roomId     Int
  user       User     @relation(fields: [userId], references: [id], name: "UserRooms")
  room       Room     @relation(fields: [roomId], references: [id], name: "RoomUsers")

  @@map("user_rooms")
  @@unique([userId, roomId], map: "unique_user_room")
}